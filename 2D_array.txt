int[][] grid;
int rows, cols, w, h;
boolean[][] showNumbers;

void setup() {
    size(500, 500);
    strokeWeight(12);
    
    grid = new int[][] {
        {1, 1, 2, 2},
        {3, 3, 4, 4},
        {5, 5, 6, 6}
    };

    rows = grid.length;
    cols = grid[0].length;

    w = width / cols;
    h = height / rows;

    showNumbers = new boolean[rows][cols];
    
    drawGrid();
}

void draw() {
    drawGrid();
    drawNumbers();
}

void drawGrid() {
    background(255);
    
    int x = 0;
    int y = 0;

    while (y <= 500) {
        line(0, y, 500, y); 
        y += h;            
    }

    y = 0;
    while (x <= 500) {
        line(x, 0, x, 500);  
        x += w;            
    }
}

void drawNumbers() {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (showNumbers[i][j]) {
                draw_numbers(45 + j * w, 60 + i * h, grid[i][j]);
            }
        }
    }
}

void draw_numbers(int x, int y, int n) {
    fill(0);
    textSize(32);
    textAlign(CENTER, CENTER);
    text(n, x + 10, y + 20);
}

void mousePressed() {
    int i = mouseY / h;
    int j = mouseX / w;
    
    if (i >= 0 && i < rows && j >= 0 && j < cols) {
        showNumbers[i][j] = !showNumbers[i][j];
    }
}
